<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mc.innuce.domain.debate.dao.DebateUserDAO">
	<select id="selectOneDebateUserByData"
		parameterType="debateuserdto" resultType="debateuserdto">
		select *
		from debate_user
		where user_key = #{user_key} and debate_room_key = #{debate_room_key}
	</select>

	<insert id="insertDebateUser" parameterType="debateuserdto">
		insert into
		debate_user(user_key, debate_room_key, debate_user_status,
		debate_user_connect_status)
		values
		(#{user_key}, #{debate_room_key}, 1,
		0)
	</insert>

	<select id="selectOneUserId" parameterType="int"
		resultType="String">
		select user_id
		from user_info
		where user_key = (select
		user_key from debate_user where debate_user_key = #{debate_user_key});
	</select>

	<select id="selectUserIdList" parameterType="java.util.List"
		resultType="String">
		<foreach collection="debateUserKeyList" item="debate_user_key"
			separator=" union all ">
			select user_id
			from user_info
			where user_key = (select
			user_key from debate_user where debate_user_key = #{debate_user_key})
		</foreach>
	</select>

	<update id="updateDebateUserStatusParticipated"
		parameterType="int">
		update debate_user
		set debate_user_status = 1
		where
		debate_user_key = #{debate_user_key}
	</update>

	<select id="openDebateRoomUserCountList"
		parameterType="java.util.List" resultType="int">
		<foreach collection="openDebateRoomKeyList"
			item="debate_room_key" separator=" union all ">
			select count(*)
			from debate_user
			where debate_room_key = #{debate_room_key}
			and debate_user_status = 1
		</foreach>
	</select>

	<select id="openDebateRoomUserConnectCountList"
		parameterType="java.util.List" resultType="int">
		<foreach collection="openDebateRoomKeyList"
			item="debate_room_key" separator=" union all ">
			select count(*)
			from debate_user
			where debate_room_key = #{debate_room_key}
			and debate_user_connect_status = 1
		</foreach>
	</select>

	<select id="selectParticipatedUserCount" parameterType="int"
		resultType="int">
		select count(*)
		from debate_user
		where debate_room_key =
		#{debate_user_key}
		and debate_user_status = 1
	</select>

	<select id="selectConnectedUserCount" parameterType="int"
		resultType="int">
		select count(*)
		from debate_user
		where debate_room_key =
		#{debate_user_key}
		and debate_user_connect_status = 1
	</select>

	<update id="updateDebateUserStatusLeave" parameterType="int">
		update
		debate_user
		set debate_user_status = 0
		where
		debate_user_key =
		#{debate_user_key}
	</update>

	<update id="updateDebateUserConnectStatusConnect"
		parameterType="int">
		update debate_user
		set debate_user_connect_status = 1
		where
		debate_user_key = #{debate_user_key}
	</update>

	<update id="updateDebateUserConnectStatusDisconnect"
		parameterType="int">
		update debate_user
		set debate_user_connect_status = 0
		where
		debate_user_key = #{debate_user_key}
	</update>

	<select id="myDebateRoomKeyList" parameterType="int"
		resultType="int">
		select debate_room_key
		from debate_user
		where user_key =
		#{user_key} and debate_user_status = 1
	</select>

	<select id="myDebateRoomKeyCount" parameterType="int"
		resultType="int">
		select count(debate_room_key)
		from debate_user
		where user_key
		= #{user_key} and debate_user_status = 1
	</select>

	<select id="selectDebateRoomKeyListByUserCount"
		parameterType="int" resultType="int">
		select debate_room_key
		from (select debate_room_key, count(*) as n
				from debate_user
				where debate_user_key in (select debate_user_key
											from (select debate_user_key, count(*) as num
													from opinion
													where opinion_regdate &gt;= date_add(now(), interval -1 day)
											group by debate_user_key) as oneday
											where oneday.num &gt;= 1)
				group by debate_room_key) as room
		where room.n &gt;= #{closeRoomUserCount}
	</select>
</mapper>