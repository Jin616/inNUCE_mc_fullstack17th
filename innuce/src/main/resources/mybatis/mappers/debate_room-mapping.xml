<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mc.innuce.domain.debate.dao.DebateRoomDAO">
	<select id="openDebateRoomList" parameterType="int" resultType="debateroomdto">
		select *
		from debate_room
		where debate_room_status in (1, 2)
		limit #{num}, 10
	</select>
	
	<select id="openDebateRoomCount" resultType="int">
		select count(*)
		from debate_room
		where debate_room_status in (1, 2)
	</select>
	
	<select id="selectOneDebateRoom" parameterType="int" resultType="debateroomdto">
		select *
		from debate_room
		where debate_room_key = #{debate_room_key}
	</select>
	
	<select id="selectExistKeywordList" resultType="int">
		select keyword_key
		from debate_room
	</select>
	
	<insert id="createDebateRoom" parameterType="java.util.List">
		insert into
		debate_room(keyword_key, debate_room_regdate, debate_room_name, debate_room_status)
		values
		<foreach collection="newKeywordList" item="keyword_key" separator=" , ">
			(#{keyword_key}, now(), (select keyword_content from keyword where keyword_key = #{keyword_key}), 2)
		</foreach>
	</insert>
	
	<select id="myDebateRoomList" parameterType="java.util.List" resultType="debateroomdto">
		select *
		from debate_room
		where debate_room_key in (
		<foreach collection="subMyDebateRoomKeyList" item="debate_room_key" separator=" , ">
			#{debate_room_key}
		</foreach>
		)
	</select>
	
	<select id="selectDebateRoomListByKeyword" parameterType="java.util.List" resultType="debateroomdto">
		select *
		from debate_room
		where keyword_key in (
		<foreach collection="keywordKey" item="keyword_key" separator=" , ">
			#{keyword_key}
		</foreach>
		)
	</select>
	
	<select id="selectDebateRoomKeyListBySearchCount" parameterType="int" resultType="int">
		select debate_room_key
		from debate_room
		where keyword_key in (select keyword_key
								from (select keyword_key, count(*) as num
										from search
										where search_time &gt;= date_add(now(), interval -1 day)
								group by keyword_key) as oneday
								where oneday.num &gt;= #{closeRoomSearchCount})
	</select>
	
	<update id="updateDebateRoomStatusOpen" parameterType="java.util.List">
		update debate_room
		set debate_room_status = 2
		where debate_room_key in (
			<foreach collection="mergedList" item="debate_room_key" separator=" , ">
				#{debate_room_key}
			</foreach>
		)
		and (debate_room_status = 1 or debate_room_status = 0)
	</update>
	
	<update id="updateDebateRoomStatusWarn" parameterType="java.util.List">
		update debate_room
		set debate_room_status = 1
		where debate_room_key not in (
			<foreach collection="mergedList" item="debate_room_key" separator=" , ">
				#{debate_room_key}
			</foreach>
		)
		and debate_room_status = 2
	</update>
	
	<update id="updateDebateRoomStatusClosed" parameterType="java.util.List">
		update debate_room
		set debate_room_status = 0
		where debate_room_key not in (
			<foreach collection="mergedList" item="debate_room_key" separator=" , ">
				#{debate_room_key}
			</foreach>
		)
		and debate_room_status = 1
	</update>
	
</mapper>